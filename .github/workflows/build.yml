name: Build Windows Release

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  release:
    types: [created]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-pc-windows-msvc

      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build release
        run: cargo build --release --target x86_64-pc-windows-msvc

      - name: Create release directory
        run: |
          mkdir release
          copy target\x86_64-pc-windows-msvc\release\music-shuffler.exe release\
          if (Test-Path "README.md") { copy README.md release\ } else { Write-Host "No README found" }

      - name: Create deployment package
        run: |
          echo "# Music Shuffler" > release\README.txt
          echo "" >> release\README.txt
          echo "Windows Music Shuffler Application" >> release\README.txt
          echo "" >> release\README.txt
          echo "## Installation:" >> release\README.txt
          echo "1. Extract all files to a folder" >> release\README.txt
          echo "2. Run music-shuffler.exe" >> release\README.txt
          echo "3. Select your music directory" >> release\README.txt
          echo "4. Generate playlist and enjoy!" >> release\README.txt
          echo "" >> release\README.txt
          echo "## Supported Formats:" >> release\README.txt
          echo "- MP3, FLAC, OGG, WAV, M4A, AAC" >> release\README.txt
          echo "" >> release\README.txt
          echo "## Troubleshooting:" >> release\README.txt
          echo "- If audio doesn't work, install Visual C++ Redistributables" >> release\README.txt
          echo "- For MP3 issues, try re-encoding with modern tools" >> release\README.txt

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: music-shuffler-windows
          path: release/

      - name: Create ZIP for release
        if: github.event_name == 'release'
        run: |
          powershell Compress-Archive -Path release\* -DestinationPath music-shuffler-windows.zip

      - name: Upload to release
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./music-shuffler-windows.zip
          asset_name: music-shuffler-windows.zip
          asset_content_type: application/zip

  test-windows:
    runs-on: windows-latest
    needs: build-windows

    steps:
      - uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: music-shuffler-windows
          path: ./test-release/

      - name: Test executable
        run: |
          cd test-release
          .\music-shuffler.exe --help || echo "App started (expected behavior for GUI app)"
